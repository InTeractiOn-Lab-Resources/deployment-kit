name: Sandbox Infrastructure Setup

on:
  workflow_dispatch:

jobs:
  create-infrastructure:
    name: Create AWS EC2 Infrastructure with Terraform
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_inline_public_key: ${{ secrets.INLINE_PUBLIC_KEY }}

    defaults:
      run:
        working-directory: sandbox/apicore-gm-client/terraform

    outputs:
      instance_ip: ${{ steps.extract.outputs.instance_ip }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply (Create EC2 Instance)
        run: terraform apply -auto-approve

      - name: Extract Public IP
        id: extract
        run: |
          echo "instance_ip=$(terraform output -raw instance_ip)" >> $GITHUB_OUTPUT

  provision-instance:
    name: Provision EC2 Instance with Ansible
    needs: create-infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Ansible Playbook to Configure Instance
        run: |
          cd sandbox/apicore-gm-client && \
          ansible-playbook deploy/playbooks/deploy_ec2.yml \
            -i "${{ needs.create-infrastructure.outputs.instance_ip }}," \
            --user ubuntu \
            --private-key "${{ secrets.SSH_PRIVATE_KEY }}" \
            --ssh-extra-args "-o StrictHostKeyChecking=no"
      