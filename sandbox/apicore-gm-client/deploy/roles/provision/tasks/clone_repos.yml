---
- name: Crear directorio del proyecto si no existe
  file:
    path: "{{ project_root }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Repositorios a clonar
  set_fact:
    repos:
      - name: api-core-test
        url: https://github.com/infra-sandbox/api-core-test.git
      - name: api-gm-test
        url: https://github.com/infra-sandbox/api-gm-test.git
      - name: client-test
        url: https://github.com/infra-sandbox/client-test.git
      - name: deployment-kit
        url: https://github.com/infra-sandbox/deployment-kit.git

- name: Clonar o actualizar repositorios
  block:
    - name: Verificar si el repositorio ya estÃ¡ clonado
      stat:
        path: "{{ project_root }}/{{ item.name }}/.git"
      register: repo_stat
      loop: "{{ repos }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Clonar el repositorio si no existe
      git:
        repo: "{{ item.item.url }}"
        dest: "{{ project_root }}/{{ item.item.name }}"
        version: main
      when: not item.stat.exists
      loop: "{{ repo_stat.results }}"
      loop_control:
        label: "{{ item.item.name }}"

    - name: Actualizar el repositorio si ya existe (y forzar reset)
      git:
        repo: "{{ item.item.url }}"
        dest: "{{ project_root }}/{{ item.item.name }}"
        version: main
        update: yes
        force: yes
      when: item.stat.exists
      loop: "{{ repo_stat.results }}"
      loop_control:
        label: "{{ item.item.name }}"

- name: Crear archivo .env con rutas necesarias
  copy:
    dest: "{{ compose_path }}/.env"
    content: |
      API_CORE_PATH={{ project_root }}/api-core-test
      API_GM_PATH={{ project_root }}/api-gm-test
      CLIENT_PATH={{ project_root }}/client-test
      INIT_SQL_PATH={{ project_root }}/api-gm-test/init.sql
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Determinar si se requiere build (clon nuevo o update con cambios)
  set_fact:
    repos_updated: >-
      {{ (clone_result.results | selectattr('changed', 'equalto', true) | list | length > 0)
       or (update_result.results | selectattr('changed', 'equalto', true) | list | length > 0) }}

- name: Reconstruir contenedores si hubo cambios en los repos
  command: docker compose build
  args:
    chdir: "{{ compose_path }}"
  when: repos_updated | default(false)
