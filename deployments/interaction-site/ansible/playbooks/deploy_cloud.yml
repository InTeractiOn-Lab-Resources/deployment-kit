---
# =====================================
# PLAYBOOK: DESPLIEGUE EN LA NUBE
# Descripción: Configura una instancia en la nube (con GitHub Actions) para desplegar la aplicación.
# =====================================

- name: Despliegue en la nube 
  hosts: all
  become: true
  
  vars:
    # CONFIGURACIÓN BÁSICA DEL PROYECTO
    # ----------------------------------
    # Nombre del proyecto
    project_name: "interaction-sites"

    # Usuario remoto (pasado desde el workflow)
    remote_user: "{{ remote_user | default('root') }}"
  
    # Directorio raíz del proyecto (se ajusta automáticamente según el usuario)
    project_root: "{{ '/home/' + remote_user if remote_user != 'root' else '/root' }}/{{ project_name }}"
    
    # Modo de despliegue (false = usar imágenes preconstruidas [RECOMENDADO], true = clonar y construir)
    clone_repos: false

    # Variables para localizar archivos
    workspace_root: "{{ workspace_root }}"
    deployment_dir: "{{ deployment_dir }}"

    # Determina si el proyecto utiliza un archivo .env para el docker compose
    use_env_file: false
    
    # Directorio local donde están los archivos a copiar (docker-compose.yml y otros archivos adicionales)
    local_files_dir: "{{ workspace_root }}/{{ deployment_dir }}"
    
    # CONFIGURACIÓN DE SERVICIOS
    # --------------------------
    # Prefijo común para las imágenes Docker
    docker_registry: ""
    
    # Definición de servicios
    services:
      - name: "backend"
        type: "api"
        port: 3000
        api_prefix: "api"
      
      - name: "spa"
        type: "frontend"
        port: 8080
        frontend_prefix: "/"

      - name: "dashboard"
        type: "frontend"
        port: 9090
        # Sin 'frontend_prefix' se accede directamente por el puerto 9090, no se enruta mediante Nginx
    
    # CONFIGURACIÓN DE NGINX
    # ---------------------    
    # Nombre del servidor (dominio o "_" para local)
    server_name: "_"

    # Controla si las rutas definidas en Nginx deben terminar con una barra "/".
    # true  ➝ Nginx agregará "/" al final del proxy_pass (ej: proxy_pass http://localhost:3000/).
    # false ➝ Nginx no agregará "/" al final (ej: proxy_pass http://localhost:3000)
    use_trailing_slash: false
    
    # Para SSL (enable_ssl: true -> con dominio, enable_ssl: false -> sin dominio)
    enable_ssl: false
    # admin_email: "carolina.antillanca@usach.cl"
    # ssl_cert_path: "/etc/letsencrypt/live/{{ server_name }}/fullchain.pem"
    # ssl_key_path: "/etc/letsencrypt/live/{{ server_name }}/privkey.pem"

  roles:
    - python
    - docker
    - { role: ssl, when: "enable_ssl | bool" }
    - nginx
    - provision
