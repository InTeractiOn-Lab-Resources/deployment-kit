---
# =====================================
# ROL: NGINX
# Descripción: Instala y configura Nginx como reverse proxy para los microservicios
# =====================================

# Instalar Nginx
- name: Instalar Nginx
  apt:
    name: nginx
    state: present
    update_cache: true
  become: true

# Asegurar que Nginx esté iniciado
- name: Asegurar que Nginx esté iniciado
  service:
    name: nginx
    state: started
    enabled: true
  become: true

# Configurar Nginx como reverse proxy
- name: Configurar Nginx como reverse proxy
  block:
    - name: Crear archivo de Nginx para redirigir servicios
      copy:
        dest: /etc/nginx/sites-available/{{ app_name | default('app') }}.conf
        content: |
          server {
              listen 80;
              server_name {{ server_name | default('_') }};

              # Frontend (puerto configurable)
              location / {
                  proxy_pass http://localhost:{{ frontend_port | default('3000') }};
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }

              # API 1 (configurable)
              location /{{ api1_prefix | default('api-1') }}/ {
                  proxy_pass http://localhost:{{ api1_port | default('3001') }}/;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }

              # API 2 (configurable)
              location /{{ api2_prefix | default('api-2') }}/ {
                  proxy_pass http://localhost:{{ api2_port | default('3002') }}/;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }

              # Puedes añadir más bloques location según sea necesario
          }
        owner: root
        group: root
        mode: '0644'
      become: true

    # Habilitar la configuración
    - name: Habilitar configuración en sites-enabled
      file:
        src: /etc/nginx/sites-available/{{ app_name | default('app') }}.conf
        dest: /etc/nginx/sites-enabled/{{ app_name | default('app') }}.conf
        state: link
      become: true

    # Eliminar configuración default (opcional)
    - name: Eliminar configuración default de Nginx
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: true
      when: remove_default_config | default(true)

    # Verificar la configuración
    - name: Verificar configuración de Nginx
      command: nginx -t
      register: nginx_test
      changed_when: false
      failed_when: nginx_test.rc != 0
      become: true

    # Recargar Nginx para aplicar cambios
    - name: Recargar Nginx para aplicar nueva configuración
      service:
        name: nginx
        state: reloaded
      become: true

# Configurar firewall para permitir tráfico HTTP
- name: Asegurar que el firewall permita tráfico HTTP
  ufw:
    rule: allow
    port: "{{ http_port | default('80') }}"
    proto: tcp
  become: true
  when: configure_firewall | default(true)
