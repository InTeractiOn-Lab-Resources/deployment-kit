name: AWS Terraform Instance Deploy

# Este workflow se encarga de desplegar una instancia en AWS utilizando Terraform.
on:
  workflow_dispatch:  # Permite ejecutar el workflow manualmente desde GitHub Actions
  push:  # Se ejecuta automáticamente cuando se realizan cambios en los archivos especificados en paths
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/aws-terraform-instance.yml'

jobs:
  deploy-instance:
    name: Deploy AWS Instance with Terraform
    runs-on: ubuntu-latest

    # Variables de entorno necesarias para la autenticación con AWS y Terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_inline_public_key: ${{ secrets.INLINE_PUBLIC_KEY }}

    defaults:
      run:
        working-directory: terraform  #  Modifica esta ruta si tus archivos de Terraform están en otra ubicación

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Paso 3: Inicializar Terraform
      - name: Terraform Init
        run: terraform init

      # Paso 4: Validar la configuración de Terraform
      - name: Terraform Validate
        run: terraform validate

      # Paso 5: Generar un plan de ejecución de Terraform
      - name: Terraform Plan
        run: terraform plan

      # Paso 6: Aplicar los cambios con Terraform.
      - name: Terraform Apply
        run: terraform apply -auto-approve
